"""Initial schema creation with corrected approval_status and table_process_view

Revision ID: 317f492f38cd
Revises: 
Create Date: 2024-11-23 15:52:24.654147

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

from src.app.config.constants import STATIC_SCHEDULE_PENDENT

# revision identifiers, used by Alembic.
revision: str = '317f492f38cd'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Remover a view primeiro devido a dependências
    op.drop_view('table_process_view')

    # Remover índices criados
    op.drop_index('idx_table_execution_table_id', table_name='table_execution')
    op.drop_index('idx_dependencies_table_id', table_name='dependencies')
    op.drop_index('idx_dependencies_dependency_id', table_name='dependencies')
    op.drop_index('idx_dependencies_optative_with_dependency_id', table_name='dependencies')
    op.drop_index('idx_task_table_table_id', table_name='task_table')
    op.drop_index('idx_task_table_task_executor_id', table_name='task_table')
    op.drop_index('idx_task_schedule_task_id', table_name='task_schedule')
    op.drop_index('idx_task_schedule_table_execution_id', table_name='task_schedule')
    op.drop_index('idx_approval_status_task_schedule_id', table_name='approval_status')
    op.drop_index('idx_table_partition_exec_table_id', table_name='table_partition_exec')
    op.drop_index('idx_table_partition_exec_partition_id', table_name='table_partition_exec')
    op.drop_index('idx_table_partition_exec_execution_id', table_name='table_partition_exec')
    op.drop_index('idx_process_status_table_id', table_name='process_status')
    op.drop_index('idx_table_execution_date_time', table_name='table_execution')
    op.drop_index('idx_partitions_name', table_name='partitions')
    op.drop_index('idx_task_executor_alias', table_name='task_executor')
    op.drop_index('idx_task_table_alias', table_name='task_table')
    op.drop_index('idx_task_schedule_status', table_name='task_schedule')

    # Remover todas as tabelas
    op.drop_table('process_status')
    op.drop_index('name', table_name='tables')
    op.drop_table('tables')
    op.drop_table('table_partition_exec')
    op.drop_table('approval_status')
    op.drop_table('task_schedule')
    op.drop_table('task_table')
    op.drop_table('partitions')
    op.drop_table('task_executor')
    op.drop_table('dependencies')
    # ### end Alembic commands ###


def upgrade() -> None:
    # Criação das tabelas existentes
    op.create_table('tables',
        sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('name', mysql.VARCHAR(collation='utf8mb4_general_ci', length=255), nullable=False),
        sa.Column('description', mysql.TEXT(collation='utf8mb4_general_ci'), nullable=True),
        sa.Column('requires_approval', mysql.TINYINT(display_width=1), server_default=sa.text("'0'"), autoincrement=False, nullable=True),
        sa.Column('created_by', mysql.VARCHAR(collation='utf8mb4_general_ci', length=255), nullable=False),
        sa.Column('last_modified_by', mysql.VARCHAR(collation='utf8mb4_general_ci', length=255), nullable=True),
        sa.Column('created_at', mysql.DATETIME(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
        sa.Column('last_modified_at', mysql.DATETIME(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
        sa.Column('date_deleted', mysql.DATETIME(), nullable=True),
        sa.Column('deleted_by', mysql.VARCHAR(collation='utf8mb4_general_ci', length=255), nullable=True),  
        sa.Column('tenant_id', mysql.INTEGER(), nullable=False, server_default='1'),
        sa.PrimaryKeyConstraint('id'),
        mysql_collate='utf8mb4_general_ci',
        mysql_default_charset='utf8mb4',
        mysql_engine='InnoDB'
    )
    op.create_table(
        'table_execution',
        sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('table_id', mysql.INTEGER(), nullable=False),
        sa.Column('date_time', mysql.DATETIME(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
        sa.Column('source', mysql.VARCHAR(collation='utf8mb4_general_ci', length=255), nullable=False),
        sa.Column('date_deleted', mysql.DATETIME(), nullable=True),
        sa.Column('deleted_by', mysql.VARCHAR(collation='utf8mb4_general_ci', length=255), nullable=True),  
        sa.Column('tenant_id', mysql.INTEGER(), nullable=False, server_default='1'),
        sa.ForeignKeyConstraint(['table_id'], ['tables.id'], name='fk_table_execution_table', ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        mysql_collate='utf8mb4_general_ci',
        mysql_default_charset='utf8mb4',
        mysql_engine='InnoDB'
    )

    # Criação das tabelas restantes
    op.create_table('dependencies',
        sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('table_id', mysql.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('dependency_id', mysql.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('is_required', mysql.TINYINT(display_width=1), autoincrement=False, nullable=False),
        sa.Column('date_deleted', mysql.DATETIME(), nullable=True),
        sa.Column('deleted_by', mysql.VARCHAR(collation='utf8mb4_general_ci', length=255), nullable=True),  
        sa.Column('tenant_id', mysql.INTEGER(), nullable=False, server_default='1'),
        sa.Column('optative_with_dependency_id', mysql.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['dependency_id'], ['tables.id'], name='dependencies_ibfk_2'),
        sa.ForeignKeyConstraint(['table_id'], ['tables.id'], name='dependencies_ibfk_1'),
        sa.ForeignKeyConstraint(['optative_with_dependency_id'], ['dependencies.id'], name='dependencies_ibfk_3'),
        sa.PrimaryKeyConstraint('id'),
        mysql_collate='utf8mb4_general_ci',
        mysql_default_charset='utf8mb4',
        mysql_engine='InnoDB'
    )
    op.create_table(
        'task_executor',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('alias', sa.String(length=255, collation='utf8mb4_general_ci'), nullable=False),
        sa.Column('description', sa.Text(collation='utf8mb4_general_ci'), nullable=True),
        sa.Column('method', sa.String(length=255, collation='utf8mb4_general_ci'), nullable=False),
        sa.Column('identification', sa.String(length=1024, collation='utf8mb4_general_ci'), nullable=True),
        sa.Column('target_role_arn', sa.String(length=255, collation='utf8mb4_general_ci'), nullable=True),
        sa.Column('date_deleted', mysql.DATETIME(), nullable=True),
        sa.Column('deleted_by', mysql.VARCHAR(collation='utf8mb4_general_ci', length=255), nullable=True),  
        sa.Column('tenant_id', mysql.INTEGER(), nullable=False, server_default='1'),
        sa.PrimaryKeyConstraint('id'),
        mysql_collate='utf8mb4_general_ci',
        mysql_default_charset='utf8mb4',
        mysql_engine='InnoDB'
    )
    op.execute(
        """
        INSERT INTO task_executor (alias, description, method, identification, target_role_arn)
        VALUES (
            'step_function_executor', 
            'Chama uma stepfunction', 
            'stepfunction_process', 
            'arn:aws:states:us-east-1:000000000000:stateMachine:exampleStateMachine', 
            'arn:aws:iam::000000000000:role/DummyRole'
        )
        """
    )

    op.create_table('partitions',
        sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('table_id', mysql.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('name', mysql.VARCHAR(collation='utf8mb4_general_ci', length=255), nullable=False),
        sa.Column('type', mysql.VARCHAR(collation='utf8mb4_general_ci', length=50), nullable=False),
        sa.Column('is_required', mysql.TINYINT(display_width=1), autoincrement=False, nullable=False, server_default='0'),
        sa.Column('sync_column', mysql.TINYINT(display_width=1), autoincrement=False, nullable=False, server_default='0'),
        sa.Column('date_deleted', mysql.DATETIME(), nullable=True),
        sa.Column('deleted_by', mysql.VARCHAR(collation='utf8mb4_general_ci', length=255), nullable=True),  
        sa.Column('tenant_id', mysql.INTEGER(), nullable=False, server_default='1'),
        sa.ForeignKeyConstraint(['table_id'], ['tables.id'], name='partitions_ibfk_1'),
        sa.PrimaryKeyConstraint('id'),
        mysql_collate='utf8mb4_general_ci',
        mysql_default_charset='utf8mb4',
        mysql_engine='InnoDB'
    )
    op.create_table('task_table',
        sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('table_id', mysql.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('task_executor_id', mysql.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('alias', mysql.VARCHAR(collation='utf8mb4_general_ci', length=255), nullable=False),
        sa.Column('params', mysql.JSON(), nullable=True),
        sa.Column('date_deleted', mysql.DATETIME(), nullable=True),
        sa.Column('deleted_by', mysql.VARCHAR(collation='utf8mb4_general_ci', length=255), nullable=True),
        sa.Column('debounce_seconds', mysql.INTEGER(), nullable=False, server_default='10'),  
        sa.Column('tenant_id', mysql.INTEGER(), nullable=False, server_default='1'),
        sa.ForeignKeyConstraint(['table_id'], ['tables.id'], name='task_table_ibfk_1'),
        sa.ForeignKeyConstraint(['task_executor_id'], ['task_executor.id'], name='task_table_ibfk_2'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('table_id', 'task_executor_id', 'alias'),
        mysql_collate='utf8mb4_general_ci',
        mysql_default_charset='utf8mb4',
        mysql_engine='InnoDB'
    )
    op.create_table(
        'task_schedule',
        sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('task_id', mysql.INTEGER(), nullable=False),
        sa.Column('last_event_time', mysql.DATETIME(), nullable=False, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('scheduled_execution_time', mysql.DATETIME(), nullable=True),
        sa.Column('status', mysql.VARCHAR(collation='utf8mb4_general_ci', length=50), nullable=False, server_default=STATIC_SCHEDULE_PENDENT),
        sa.Column('executed', mysql.TINYINT(1), nullable=False, server_default='0'),
        sa.Column('table_execution_id', mysql.INTEGER(), nullable=False),
        sa.Column('unique_alias', mysql.VARCHAR(collation='utf8mb4_general_ci', length=350), nullable=False),
        sa.Column('schedule_alias', mysql.VARCHAR(collation='utf8mb4_general_ci', length=64), nullable=True),
        sa.Column('execution_arn', mysql.VARCHAR(collation='utf8mb4_general_ci', length=350), nullable=True),
        sa.Column('date_deleted', mysql.DATETIME(), nullable=True),
        sa.Column('deleted_by', mysql.VARCHAR(collation='utf8mb4_general_ci', length=255), nullable=True),
        sa.Column('debounce_seconds', mysql.INTEGER(), nullable=False, server_default='10'),  
        sa.Column('tenant_id', mysql.INTEGER(), nullable=False, server_default='1'),
        sa.ForeignKeyConstraint(['task_id'], ['task_table.id'], name='task_schedule_ibfk_1'),
        sa.ForeignKeyConstraint(['table_execution_id'], ['table_execution.id'], name='task_schedule_ibfk_2'),
        sa.PrimaryKeyConstraint('id'),
        mysql_collate='utf8mb4_general_ci',
        mysql_default_charset='utf8mb4',
        mysql_engine='InnoDB'
    )    
    op.create_table('approval_status',
        sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('task_schedule_id', mysql.INTEGER(), autoincrement=False, nullable=False),  
        sa.Column('status', mysql.ENUM('PENDING', 'APPROVED', 'REJECTED'), server_default=sa.text("'PENDING'"), nullable=True),
        sa.Column('requested_at', mysql.DATETIME(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
        sa.Column('reviewed_at', mysql.DATETIME(), nullable=True),
        sa.Column('approver_name', mysql.VARCHAR(collation='utf8mb4_general_ci', length=255), nullable=True),
        sa.Column('date_deleted', mysql.DATETIME(), nullable=True),
        sa.Column('deleted_by', mysql.VARCHAR(collation='utf8mb4_general_ci', length=255), nullable=True),  
        sa.Column('tenant_id', mysql.INTEGER(), nullable=False, server_default='1'),
        sa.ForeignKeyConstraint(['task_schedule_id'], ['task_schedule.id'], name='approval_status_ibfk_1'),  
        sa.PrimaryKeyConstraint('id'),
        mysql_collate='utf8mb4_general_ci',
        mysql_default_charset='utf8mb4',
        mysql_engine='InnoDB'
    )
    
    op.create_table(
        'table_partition_exec',
        sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('table_id', mysql.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('partition_id', mysql.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('value', mysql.VARCHAR(collation='utf8mb4_general_ci', length=255), nullable=False),
        sa.Column('execution_date', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
        sa.Column('deletion_date', mysql.TIMESTAMP(), nullable=True),
        sa.Column('deleted_by_user', mysql.VARCHAR(collation='utf8mb4_general_ci', length=255), nullable=True),
        sa.Column('execution_id', mysql.INTEGER(), autoincrement=False, nullable=False),  
        sa.Column('date_deleted', mysql.DATETIME(), nullable=True),
        sa.Column('deleted_by', mysql.VARCHAR(collation='utf8mb4_general_ci', length=255), nullable=True),  
        sa.Column('tenant_id', mysql.INTEGER(), nullable=False, server_default='1'),
        sa.ForeignKeyConstraint(['partition_id'], ['partitions.id'], name='fk_partition', ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['table_id'], ['tables.id'], name='fk_table', ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['execution_id'], ['table_execution.id'], name='fk_execution', ondelete='CASCADE'),  
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('table_id', 'partition_id', 'value', 'execution_id'),
        mysql_collate='utf8mb4_general_ci',
        mysql_default_charset='utf8mb4',
        mysql_engine='InnoDB'    
    )

    op.create_index('name', 'tables', ['name'], unique=True)
    op.create_table('process_status',
        sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('table_id', mysql.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('partition_set', mysql.JSON(), nullable=False),
        sa.Column('status', mysql.ENUM('IDLE', 'RUNNING', 'EXECUTED', 'FAILED'), nullable=False),
        sa.Column('last_updated', mysql.DATETIME(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
        sa.Column('execution_start_time', mysql.DATETIME(), nullable=True),
        sa.Column('execution_end_time', mysql.DATETIME(), nullable=True),
        sa.Column('execution_logs', mysql.TEXT(collation='utf8mb4_general_ci'), nullable=True),
        sa.Column('date_deleted', mysql.DATETIME(), nullable=True),
        sa.Column('deleted_by', mysql.VARCHAR(collation='utf8mb4_general_ci', length=255), nullable=True),  
        sa.Column('tenant_id', mysql.INTEGER(), nullable=False, server_default='1'),
        sa.ForeignKeyConstraint(['table_id'], ['tables.id'], name='process_status_ibfk_1'),
        sa.PrimaryKeyConstraint('id'),
        mysql_collate='utf8mb4_general_ci',
        mysql_default_charset='utf8mb4',
        mysql_engine='InnoDB'
    )
    
    # Criação da view 'table_process_view'
    op.execute("""
    CREATE VIEW table_process_view AS
    SELECT
        t.name AS table_name,
        t.description AS table_description,
        -- Agrega os parâmetros das partições no formato key=value separados por vírgula
        GROUP_CONCAT(CONCAT(p.name, '=', tpe.value) SEPARATOR ', ') AS partition_set,
        te.date_time AS execution_time,
        aps.approver_name,
        -- Agrega os aliases dos executores das tasks separados por vírgula
        GROUP_CONCAT(te_exec.alias SEPARATOR ', ') AS task_executors
    FROM
        tables t
    JOIN
        table_execution te ON t.id = te.table_id
    LEFT JOIN
        table_partition_exec tpe ON te.id = tpe.execution_id
    LEFT JOIN
        partitions p ON tpe.partition_id = p.id
    LEFT JOIN
        task_schedule ts ON te.id = ts.table_execution_id
    LEFT JOIN
        task_table tt ON ts.task_id = tt.id
    LEFT JOIN
        task_executor te_exec ON tt.task_executor_id = te_exec.id
    LEFT JOIN
        approval_status aps ON ts.id = aps.task_schedule_id
    GROUP BY
        te.id, t.name, t.description, te.date_time, aps.approver_name;
    """)

    # Criação de índices adicionais para otimização de consultas
    # Índices em colunas de chave estrangeira
    op.create_index('idx_table_execution_table_id', 'table_execution', ['table_id'])
    op.create_index('idx_dependencies_table_id', 'dependencies', ['table_id'])
    op.create_index('idx_dependencies_dependency_id', 'dependencies', ['dependency_id'])
    op.create_index('idx_dependencies_optative_with_dependency_id', 'dependencies', ['optative_with_dependency_id'])
    op.create_index('idx_task_table_table_id', 'task_table', ['table_id'])
    op.create_index('idx_task_table_task_executor_id', 'task_table', ['task_executor_id'])
    op.create_index('idx_task_schedule_task_id', 'task_schedule', ['task_id'])
    op.create_index('idx_task_schedule_table_execution_id', 'task_schedule', ['table_execution_id'])
    op.create_index('idx_approval_status_task_schedule_id', 'approval_status', ['task_schedule_id'])
    op.create_index('idx_table_partition_exec_table_id', 'table_partition_exec', ['table_id'])
    op.create_index('idx_table_partition_exec_partition_id', 'table_partition_exec', ['partition_id'])
    op.create_index('idx_table_partition_exec_execution_id', 'table_partition_exec', ['execution_id'])
    op.create_index('idx_process_status_table_id', 'process_status', ['table_id'])

    # Índices em colunas utilizadas em consultas frequentes
    op.create_index('idx_table_execution_date_time', 'table_execution', ['date_time'])
    op.create_index('idx_partitions_name', 'partitions', ['name'])
    op.create_index('idx_task_executor_alias', 'task_executor', ['alias'])
    op.create_index('idx_task_table_alias', 'task_table', ['alias'])
    op.create_index('idx_task_schedule_status', 'task_schedule', ['status'])

    # ### end Alembic commands ###
